#define  _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>

//int main()
//{
//	int arr[10] = {1,2,3,4,5,6,7,8,9, 10 };
//	int i = 0;
//	
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int* p = arr;
//	//for (i = 0; i < sz; i++)
//	//{
//	//	printf("%d\n", *p);
//	//	p = p + 1;//p++
//	//}
//	for (i = 0; i < 5; i++)
//	{
//		printf("%d\n", *p);
//		p += 2;//p++
//	}
//	return 0;
//}

//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	&arr[9] - &arr[0];
//	printf("%d\n", &arr[9] - &arr[0]);
//	return 0;
//
//}
//int  my_strlen(char* arr)
//{
//	char* start = arr;
//	char* end = arr;
//	while (*end != '\0')
//	{
//		end++;
//	}
//	return end - start;
//}
//int main()
//{
//	char arr[] = "bit" ;
//	int len= my_strlen(arr);
//	printf("%d\n", len);
//	return 0;
//}

//int main()
//{
//	int a[10] = { 0 };
//	printf("%p\n", a);//首元素地址
//	printf("%p\n", a+1);
//
//	printf("%p\n", &a[0]);
//	printf("%p\n", &a[0]+1);
//
//	printf("%p\n", &a);//整个数组
//	printf("%p\n", &a+1);
//	return 0;
//}

//int main()
//{
//	int a[10] = { 10 };
//	int* p = a;
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		printf("%p   %p\n",p+i,&a[i] );
//	}
//	return 0;
//}

//int main()
//{
//	int a = 0;
//	int* pa = &a;
//	int** ppa = &pa;//二级指针
//	printf("%d\n", **ppa);
//	return 0;
//}

int main()
{


}
