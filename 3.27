#define  _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

//int count(unsigned int a)
//{
//	int count = 0;
//	while (a)
//	{
//		if (a % 2 == 1)
//		{
//			count++;
//		}
//		a = a / 2;
//	}
//	return count;
//}
//int count(int a)
//{
//	int count = 0;
//	int i = 0;
//	for (i = 0; i < 32; i++)
//	{
//		if (((a >> i) & 1) == 1)
//		{
//			count++;
//		}
//	}
//	return count;
//}

//int count(int a)//最优解
//{
//	int count = 0;//n&(n-1);
//	while (a)
//	{
//		a = a&(a - 1);
//		count++;
//	}
//	return count;
//}
////int main()
////{
////	int a = 0;
////	scanf("%d", &a);
////	int b=count(a);
////	printf("%d\n", b);
////	return 0;
////}
//int ccount(int m, int n)
//{
//	int tmp = m^n;
//	return count(tmp);
//}
//int main()
//{
//	int m = 0;
//	int n = 0;
//	scanf("%d%d", &m, &n);
//	int count=ccount(m, n);
//	printf("%d\n", count);
//	return 0;
//}
//void print(int m)
//{
//	int i = 0;
//	printf("奇数位\n");
//	for (i = 30; i >= 0; i -= 2)
//	{
//		printf("%d ", (m >> i) & 1);
//	}
//	printf("\n");
//	printf("偶数位\n");
//	for (i = 31; i >= 1; i -= 2)
//	{
//		printf("%d ", (m >> i) & 1);
//
//	}
//	printf("\n");
//
//}
//int main()
//{
//	int m = 0;
//	scanf("%d", &m);
//	print(m);
//	return 0;
//}
//void print(int*p ,int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", *(p + i));
//	}
//}
//int main()
//{
//
//	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	print(arr,sz);
//}
//void print_table(int n)
//{
//	int i = 0;
//	for (i = 1; i <= n; i++)
//	{
//		int j = 0;
//		for (j = 1; j <= i; j++)
//		{
//			printf("%d*%d=%-3d ", i, j, i*j);
//		}
//		printf("\n");
//	}
//
//}
//int main()
//{
//	int n = 0;
//	scanf("%d", &n);
//	print_table(n);
//	return 0;
//}
int my_strlen(char* arr)
{
	int count = 0;
	while (*arr != '\0')
	{
		count++;
		arr++;
	}
	return count;
}



//void reverse_string(char arr[])
//{
//	int left = 0;
//	int right = my_strlen(arr) - 1;
//	while (left<right)
//	{
//		char tmp = arr[left];
//		arr[left] = arr[right];
//		arr[right] = tmp;
//		left++;
//		right--;
//	}
//	
//}

//void reverse_string(char arr[])
//{
//	char tmp = arr[0];
//	int len = my_strlen(arr);
//	arr[0] = arr[len - 1];
//	arr[len - 1] = '\0';
//	if (my_strlen(arr + 1) >= 2)
//		reverse_string(arr + 1);
//	arr[len - 1] = tmp;
//}
//
//int main()
//{
//	char arr[] = "abcdefgh";
//	reverse_string(arr);
//	printf("%s\n", arr);
//	return 0;
//}
//int Digitsum(unsigned int num)
//{
//	if (num > 9)
//	{
//		return Digitsum(num / 10) + num % 10;
//	}
//	if (num <= 9)
//	{
//		return num;
//	}
//}
//int main()
//{
//	unsigned int num = 0;
//	scanf("%d", &num);//1729
//	int ret = Digitsum(num);
//	printf("ret=%d\n", ret);
//	return 0;
//}
//double pow(int n, int k)
//{
//	if (k < 0)
//		return (1.0 / (pow(n, -k)));
//	else if (k == 0)
//		return 1;
//	else
//		return n*pow(n, k - 1);
//}
//int main()
//{
//	int n = 0;
//	int k = 0;
//	scanf("%d%d", &n, &k);
//	double ret=pow(n,k);
//	printf("ret=%lf\n", ret);
//	return 0;
//}

struct stu
{
	char name[20];
	short age;
	char tele[12];
	char sex[5];
}; s1, s2, s3;//全局变量
typedef struct stu
{
	char name[20];
	short age;
	char tele[12];
	char sex[5];
}sstu;


int main()
{
	struct stu s = {"牛",18,"1213131","男"};//局部变量
	sstu ss;
	return 0;
}
